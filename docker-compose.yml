version: '3.3'

services:
  api:
    build:
      context: ./src/bcr
      dockerfile: ../../services/api/Dockerfile
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:${APP_PORT}/health-check || exit 1" ]
      interval: 1s
      timeout: 2s
      retries: 5
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - postgres
    networks:
      - localnet
  cron:
    build:
      context: ./src/bcr
      dockerfile: ../../services/cron/Dockerfile
    depends_on:
      - postgres
    networks:
      - localnet
  postgres:
    build: ./services/postgres
    healthcheck:
      test: PGPASSWORD='${POSTGRES_PASSWORD}' psql -U ${POSTGRES_USER} --command='SELECT 1'
      interval: 1s
      timeout: 2s
      retries: 5
    ports:
      - 54320:5432
    volumes:
      - ./volumes/database:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    networks:
      - localnet
  flyway:
    image: boxfuse/flyway
    command: -url=jdbc:postgresql://postgres:5432/"${POSTGRES_DB}" -user="${POSTGRES_USER}" -password="${POSTGRES_PASSWORD}" migrate
    volumes:
      - ./services/postgres/migrations:/flyway/sql
    depends_on:
      - postgres
    networks:
      - localnet
  portainer:
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 19000:9000
      - 18000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volumes/portainer_data:/data
    networks:
      - localnet

networks:
  localnet:
    driver: bridge